pip:
  restore_cache: &pip_restore_cache
    keys:
      - pip-v1-{{ .Branch }}-{{ checksum "api/requirements-dev.txt" }}-{{ checksum "api/requirements.txt" }}
      - pip-v1-{{ .Branch }}-
      - pip-v1-

  install:  &pip_install
    name: Install pip packages
    command: |
      python3 -m venv ~/venv
      . ~/venv/bin/activate
      pip install -r api/requirements-dev.txt

  save_cache: &pip_save_cache
    key: pip-v1-{{ .Branch }}-{{ checksum "api/requirements-dev.txt" }}-{{ checksum "api/requirements.txt" }}
    paths:
      - ~/venv

version: 2.1
orbs:
  node: circleci/node@4.1.1
  terraform: circleci/terraform@1.2.0
executors:
  python:
    docker:
      - image: circleci/python:3.9.2
    working_directory: ~/torii
  nodejs:
    docker:
      - image: circleci/node:14.15.5
jobs:
  python-test:
    executor: python
    steps:
      - checkout
      - restore_cache:
          <<: *pip_restore_cache
      - run:
          <<: *pip_install
      - save_cache:
          <<: *pip_save_cache
      - run:
          name: Run tests
          command: |
            . ~/venv/bin/activate
            cd ./api
            ./../.circleci/nosetests.sh tests
      - store_test_results:
          path: api/dist

  flake8:
    executor: python
    steps:
      - checkout
      - restore_cache:
          <<: *pip_restore_cache
      - run:
          <<: *pip_install
      - save_cache:
          <<: *pip_save_cache
      - run:
          name: Run flake8
          command: |
            . ~/venv/bin/activate
            cd api/
            flake8 .

  isort:
    executor: python
    steps:
      - checkout
      - restore_cache:
          <<: *pip_restore_cache
      - run:
          <<: *pip_install
      - save_cache:
          <<: *pip_save_cache
      - run:
          name: Run isort check
          command: |
            . ~/venv/bin/activate
            cd api/
            isort --check --diff .

  eslint:
    executor: nodejs
    steps:
      - checkout
      - node/install-packages:
          cache-version: v1
          pkg-manager: npm
      - run:
          name: Run eslint check
          command: npm run lint

  build:
    executor: nodejs
    steps:
      - checkout
      - node/install-packages:
          cache-version: v1
          pkg-manager: npm
      - run:
          name: Build webpack
          command: npm run build:production
      - store_artifacts:
          path: public

workflows:
  version: 2
  test:
    jobs:
      - python-test
      - flake8
      - isort
      - eslint
      - build
      - terraform/fmt:
          checkout: true
          path: terraform/
      - terraform/validate:
          checkout: true
          backend: false
          path: terraform/
