version: 2.1
orbs:
  node: circleci/node@4.3.0
  terraform: circleci/terraform@2.0.2
executors:
  python:
    docker:
      - image: circleci/python:3.9.4
    working_directory: ~/torii
  nodejs:
    docker:
      - image: circleci/node:15.14.0
commands:
  install_pip_packages:
    description: "install pip packages and caching"
    steps:
      - restore_cache:
          keys:
            - pip-v1-{{ .Branch }}-{{ checksum "api/requirements-dev.txt" }}-{{ checksum "api/requirements.txt" }}
            - pip-v1-{{ .Branch }}-
            - pip-v1-
      - run:
          name: Install pip packages
          command: |
            python3 -m venv ~/venv
            . ~/venv/bin/activate
            pip install -r api/requirements-dev.txt
      - save_cache:
          key: pip-v1-{{ .Branch }}-{{ checksum "api/requirements-dev.txt" }}-{{ checksum "api/requirements.txt" }}
          paths:
            - ~/venv
jobs:
  python-test:
    executor: python
    steps:
      - checkout
      - install_pip_packages
      - run:
          name: Run tests
          command: |
            . ~/venv/bin/activate
            cd ./api
            ./../.circleci/nosetests.sh tests
      - store_test_results:
          path: api/dist

  flake8:
    executor: python
    steps:
      - checkout
      - install_pip_packages
      - run:
          name: Run flake8
          command: |
            . ~/venv/bin/activate
            cd api/
            flake8 .

  isort:
    executor: python
    steps:
      - checkout
      - install_pip_packages
      - run:
          name: Run isort check
          command: |
            . ~/venv/bin/activate
            cd api/
            isort --check --diff .

  eslint:
    executor: nodejs
    steps:
      - checkout
      - node/install-packages:
          cache-version: v1
          pkg-manager: npm
      - run:
          name: Run eslint check
          command: npm run lint

  build:
    executor: nodejs
    steps:
      - checkout
      - node/install-packages:
          cache-version: v1
          pkg-manager: npm
      - run:
          name: Build webpack
          command: npm run build:production
      - store_artifacts:
          path: public

workflows:
  version: 2
  test:
    jobs:
      - python-test
      - flake8
      - isort
      - eslint
      - build
      - terraform/fmt:
          checkout: true
          path: terraform/
      - terraform/validate:
          checkout: true
          backend: false
          path: terraform/
